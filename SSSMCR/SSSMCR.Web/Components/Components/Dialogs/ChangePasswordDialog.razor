@using MudBlazor
@using System.ComponentModel.DataAnnotations
@using SSSMCR.Shared.Model
@inject IUserService UserService
@inject ISnackbar Snackbar



<MudDialogContent class="pa-4">
    <MudStack Spacing="2">
        <EditForm Model="_model" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <Mudstack Spacing="2">
                <MudTextField @bind-Value="_model.CurrentPassword" Label="Current password" InputType="InputType.Password" Required="true" />
                <MudTextField @bind-Value="_model.NewPassword" Label="New password" InputType="InputType.Password" Required="true" />
                <MudTextField @bind-Value="_model.Confirm" Label="Confirm new password" InputType="InputType.Password" Required="true" />
                <ValidationSummary />
            </Mudstack>
        </EditForm>
    </MudStack>
</MudDialogContent>
<MudDialogActions class="px-4 pb-3">
    <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit" Disabled="_busy" OnClick="Submit">Change</MudButton>
    <MudButton Variant="Variant.Outlined" OnClick="MudDialog.Cancel">Cancel</MudButton>
</MudDialogActions>

@code {
    [CascadingParameter] 
    public IMudDialogInstance MudDialog { get; set; } = default!;
    private bool _busy;
    private Model _model = new();

    private async Task Submit()
    {
        if (_model.NewPassword != _model.Confirm)
        {
            Snackbar.Add("Passwords don’t match.", Severity.Warning);
            return;
        }

        try
        {
            _busy = true;
            await UserService.ChangePasswordAsync(new ChangePasswordRequest
            {
                CurrentPassword = _model.CurrentPassword,
                NewPassword = _model.NewPassword
            });
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Failed: {ex.Message}", Severity.Error);
        }
        finally { _busy = false; }
    }

    private sealed class Model
    {
        [Required] public string CurrentPassword { get; set; } = "";
        [Required, MinLength(6)] public string NewPassword { get; set; } = "";
        [Required] public string Confirm { get; set; } = "";
    }
}
